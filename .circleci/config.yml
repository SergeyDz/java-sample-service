# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
jobs:
  
  clone: 
    docker: 
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps: 
        - checkout
        - run: rm -rf .git
        - persist_to_workspace:
            root: ~/repo
            paths:
              - helm/
              - src/
              - build.gradle
              - Dockerfile
      

  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    working_directory: ~/repo
    steps:
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: gradle build
      - run: gradle test
  helm:
    docker:
      # specify the version you desire here
      - image: alpine/helm

    steps:
      - attach_workspace:
          at: ~/
      - run: helm package helm/release-promotion-sample

  docker:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - attach_workspace:
          at: ~/
      - setup_remote_docker
      - run:
          name: Install dependencies
          command: |
            apk add --no-cache \
              py-pip=9.0.0-r1
            pip install \
              docker-compose==1.12.0 \
              awscli==1.11.76
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: Build application Docker image
          command: |
            docker build --cache-from=app -t app .
      - run:
          name: Save Docker image layer cache
          command: |
            mkdir -p /caches
            docker save -o /caches/app.tar app
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/app.tar

# Orchestrate our job run sequence
workflows:
  version: 2
  pipeline:
    jobs:
      - clone
      - build:
          requires:
            - clone
      - helm:
          requires:
            - clone
      - docker:
          requires:
            - clone
            - build

  
