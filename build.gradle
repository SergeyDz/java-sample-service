buildscript {
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.6.RELEASE"
        classpath "gradle.plugin.com.github.jk1:gradle-license-report:0.3.9"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.4"
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'distribution'
    id 'jacoco'
    id 'org.sonarqube' version '2.7'
    id "io.qameta.allure" version "2.8.1"
}

repositories {
    mavenLocal()
    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }
}

dependencies {
    testCompile 'junit:junit:4.11'
    implementation 'com.sun.net.httpserver:http:20070405'
}

group = 'com.intapp.releasepromotionsample'
description = 'release-promotion-sample'
sourceCompatibility = '1.8'

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    project.version = project.file('VERSION').text.trim()
}

jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'com.intapp.releasepromotionsample.App'
    )
  }
}

test {
    reports {
        junitXml.enabled = true
        html.enabled = true
    }  
    jacoco {
        destinationFile = file("${buildDir.name}/jacoco/test.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }  
    allure {
        autoconfigure = true
        version = '2.8.1'
        reportDir = file('build/allure-results')
    }           
}

task createProperties(dependsOn: processResources) {
  doLast {
    new File("$buildDir/resources/main/version.properties").withWriter { w ->
        Properties p = new Properties()
        p['version'] = project.version.toString()
        p.store w, null
    }
  }
}

classes {
    dependsOn createProperties
}

sonarqube {
    properties {
        property "sonar.projectName", "temp"
        property "sonar.projectKey", "temp"
        property "sonar.projectVersion", "0.1.0"
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.jacoco.reportPath", "${buildDir.name}/jacoco/test.exec"
    }
}

jacoco {
    toolVersion = "0.8.3"
    reportsDir = file("${buildDir.name}/jacoco/test.exec")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacoco/test.html")
    }
}

